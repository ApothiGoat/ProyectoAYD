{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrogil/Desktop/Uni/2025-1/Analisis/ProyectoAYD/front/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto que envuelve la aplicación\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState({\n    username: 'admin',\n    role: 'admin',\n    branch_id: null\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Función para iniciar sesión (simplificada)\n  const login = async credentials => {\n    setUser({\n      username: credentials.username || 'admin',\n      role: 'admin',\n      branch_id: null\n    });\n    setIsAuthenticated(true);\n    return true;\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Función para verificar autenticación\n  const checkAuth = useCallback(() => {\n    // Simulamos autenticación para desarrollo\n    return true;\n  }, []);\n\n  // Valor del contexto que se proporcionará\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    logout,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar el contexto\n_s(AuthProvider, \"+zF+m3p94/iIYp0DJ824YWJnzjU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n\n  // Si el contexto es undefined, significa que el hook se está usando\n  // fuera de un AuthProvider\n  if (context === undefined) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","username","role","branch_id","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","login","credentials","logout","checkAuth","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/alejandrogil/Desktop/Uni/2025-1/Analisis/ProyectoAYD/front/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\n\n// Crear el contexto\nconst AuthContext = createContext();\n\n// Proveedor del contexto que envuelve la aplicación\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState({\n    username: 'admin',\n    role: 'admin',\n    branch_id: null\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Función para iniciar sesión (simplificada)\n  const login = async (credentials) => {\n    setUser({\n      username: credentials.username || 'admin',\n      role: 'admin',\n      branch_id: null\n    });\n    setIsAuthenticated(true);\n    return true;\n  };\n  \n  // Función para cerrar sesión\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  \n  // Función para verificar autenticación\n  const checkAuth = useCallback(() => {\n    // Simulamos autenticación para desarrollo\n    return true;\n  }, []);\n  \n  // Valor del contexto que se proporcionará\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    logout,\n    checkAuth\n  };\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  \n  // Si el contexto es undefined, significa que el hook se está usando\n  // fuera de un AuthProvider\n  if (context === undefined) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  \n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;;AAE/E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,QAAQ,EAAE,OAAO;IACjBC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMoB,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnCX,OAAO,CAAC;MACNC,QAAQ,EAAEU,WAAW,CAACV,QAAQ,IAAI,OAAO;MACzCC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACb,CAAC,CAAC;IACFE,kBAAkB,CAAC,IAAI,CAAC;IACxB,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACnBZ,OAAO,CAAC,IAAI,CAAC;IACbK,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMQ,SAAS,GAAGrB,WAAW,CAAC,MAAM;IAClC;IACA,OAAO,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMsB,KAAK,GAAG;IACZf,IAAI;IACJK,eAAe;IACfE,OAAO;IACPE,KAAK;IACLE,KAAK;IACLE,MAAM;IACNC;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAChCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAArB,EAAA,CAnDaF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAoDzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGhC,UAAU,CAACI,WAAW,CAAC;;EAEvC;EACA;EACA,IAAI4B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CAVWD,OAAO;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}